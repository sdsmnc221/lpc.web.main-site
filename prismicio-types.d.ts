// Code generated by Slice Machine. DO NOT EDIT.

import type * as prismic from "@prismicio/client";

type Simplify<T> = { [KeyType in keyof T]: T[KeyType] };

/**
 * Content for CatFiche documents
 */
interface CatficheDocumentData {
  /**
   * publicationDate field in *CatFiche*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.createddate
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#date
   */
  createddate: prismic.DateField;

  /**
   * catName field in *CatFiche*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catname
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  catname: prismic.KeyTextField;

  /**
   * catPhoto field in *CatFiche*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catphoto
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  catphoto: prismic.ImageField<never>;

  /**
   * catPhoto2 field in *CatFiche*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catphoto2
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  catphoto2: prismic.ImageField<never>;

  /**
   * catSexe field in *CatFiche*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catsexe
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  catsexe: prismic.SelectField<"♂️" | "♀️">;

  /**
   * catAgeNumber field in *CatFiche*
   *
   * - **Field Type**: Number
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catagenumber
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  catagenumber: prismic.NumberField;

  /**
   * catAgeType field in *CatFiche*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catagetype
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  catagetype: prismic.SelectField<"Mois" | "An(s)">;

  /**
   * catBirth field in *CatFiche*
   *
   * - **Field Type**: Date
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catbirth
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#date
   */
  catbirth: prismic.DateField;

  /**
   * catBirthYear field in *CatFiche*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catbirthyear
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  catbirthyear: prismic.KeyTextField;

  /**
   * catDescription field in *CatFiche*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.catdescription
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  catdescription: prismic.RichTextField;

  /**
   * catIdentification field in *CatFiche*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Identifié.e par tatouage
   * - **API ID Path**: catfiche.catidentification
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  catidentification: prismic.SelectField<
    | "Identifié.e par tatouage"
    | "Identifié.e par puce"
    | "Sera identifié.e avant l'adoption.",
    "filled"
  >;

  /**
   * catVaccination field in *CatFiche*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: true
   * - **API ID Path**: catfiche.catvaccination
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  catvaccination: prismic.BooleanField;

  /**
   * catSterilization field in *CatFiche*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: catfiche.catsterilization
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  catsterilization: prismic.BooleanField;

  /**
   * zipCode field in *CatFiche*
   *
   * - **Field Type**: Number
   * - **Placeholder**: 91210
   * - **API ID Path**: catfiche.zipcode
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#number
   */
  zipcode: prismic.NumberField;

  /**
   * relatedCat field in *CatFiche*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: catfiche.relatedcat
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  relatedcat: prismic.ContentRelationshipField<"catfiche">;

  /**
   * adoptionStatus field in *CatFiche*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: Adoptable - Chat adulte
   * - **API ID Path**: catfiche.adoptionstatus
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  adoptionstatus: prismic.SelectField<
    | "Adoptable - Chat adulte"
    | "Adoptable - Chat craintif"
    | "Adoptable - Chaton"
    | "Adopté.e"
    | "Adoptable - Chat ado"
    | "Réservé.e",
    "filled"
  >;
}

/**
 * CatFiche document from Prismic
 *
 * - **API ID**: `catfiche`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type CatficheDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<CatficheDocumentData>,
    "catfiche",
    Lang
  >;

type EmbedpageDocumentDataSlicesSlice = never;

/**
 * Content for EmbedPage documents
 */
interface EmbedpageDocumentData {
  /**
   * embedContent field in *EmbedPage*
   *
   * - **Field Type**: Embed
   * - **Placeholder**: *None*
   * - **API ID Path**: embedpage.embedcontent
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#embed
   */
  embedcontent: prismic.EmbedField;

  /**
   * Slice Zone field in *EmbedPage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: embedpage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<EmbedpageDocumentDataSlicesSlice> /**
   * Meta Title field in *EmbedPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: embedpage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *EmbedPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: embedpage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *EmbedPage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: embedpage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * EmbedPage document from Prismic
 *
 * - **API ID**: `embedpage`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type EmbedpageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<EmbedpageDocumentData>,
    "embedpage",
    Lang
  >;

/**
 * Item in *ErrorPage → errorsList*
 */
export interface ErrorpageDocumentDataErrorslistItem {
  /**
   * errorCode field in *ErrorPage → errorsList*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.errorslist[].errorcode
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  errorcode: prismic.KeyTextField;

  /**
   * errorDisplayMessage field in *ErrorPage → errorsList*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.errorslist[].errordisplaymessage
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  errordisplaymessage: prismic.KeyTextField;
}

/**
 * Item in *ErrorPage → quickaccesslinks*
 */
export interface ErrorpageDocumentDataQuickaccesslinksItem {
  /**
   * label field in *ErrorPage → quickaccesslinks*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.quickaccesslinks[].label
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  label: prismic.KeyTextField;

  /**
   * link field in *ErrorPage → quickaccesslinks*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.quickaccesslinks[].link
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  link: prismic.LinkField;
}

type ErrorpageDocumentDataSlicesSlice = never;

/**
 * Content for ErrorPage documents
 */
interface ErrorpageDocumentData {
  /**
   * errorsList field in *ErrorPage*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.errorslist[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  errorslist: prismic.GroupField<Simplify<ErrorpageDocumentDataErrorslistItem>>;

  /**
   * errorContent field in *ErrorPage*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.errorcontent
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  errorcontent: prismic.RichTextField;

  /**
   * errorHeading field in *ErrorPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.errorheading
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  errorheading: prismic.KeyTextField;

  /**
   * quickaccesslinks field in *ErrorPage*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.quickaccesslinks[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  quickaccesslinks: prismic.GroupField<
    Simplify<ErrorpageDocumentDataQuickaccesslinksItem>
  >;

  /**
   * Slice Zone field in *ErrorPage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<ErrorpageDocumentDataSlicesSlice> /**
   * Meta Title field in *ErrorPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: errorpage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *ErrorPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: errorpage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *ErrorPage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: errorpage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * ErrorPage document from Prismic
 *
 * - **API ID**: `errorpage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ErrorpageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<ErrorpageDocumentData>,
    "errorpage",
    Lang
  >;

/**
 * Item in *FooterMenu → linksGroup*
 */
export interface FootermenuDocumentDataLinksgroupItem {
  /**
   * linkstem field in *FooterMenu → linksGroup*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.linksgroup[].linkitem
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  linkitem: prismic.LinkField;

  /**
   * linkLabel field in *FooterMenu → linksGroup*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.linksgroup[].linklabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  linklabel: prismic.KeyTextField;
}

/**
 * Item in *FooterMenu → socialMediaGroup*
 */
export interface FootermenuDocumentDataSocialmediasItem {
  /**
   * socialMediaLabel field in *FooterMenu → socialMediaGroup*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.socialmedias[].socialmedialabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  socialmedialabel: prismic.KeyTextField;

  /**
   * socialMediaLink field in *FooterMenu → socialMediaGroup*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.socialmedias[].socialmediaLink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  socialmediaLink: prismic.LinkField;

  /**
   * socialMediaIcon field in *FooterMenu → socialMediaGroup*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.socialmedias[].socialmediaicon
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  socialmediaicon: prismic.ImageField<never>;
}

/**
 * Content for FooterMenu documents
 */
interface FootermenuDocumentData {
  /**
   * linksGroup field in *FooterMenu*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.linksgroup[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  linksgroup: prismic.GroupField<
    Simplify<FootermenuDocumentDataLinksgroupItem>
  >;

  /**
   * copyright field in *FooterMenu*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.copyright
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  copyright: prismic.KeyTextField;

  /**
   * socialMediaGroup field in *FooterMenu*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: footermenu.socialmedias[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  socialmedias: prismic.GroupField<
    Simplify<FootermenuDocumentDataSocialmediasItem>
  >;
}

/**
 * FooterMenu document from Prismic
 *
 * - **API ID**: `footermenu`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type FootermenuDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<FootermenuDocumentData>,
    "footermenu",
    Lang
  >;

type HomepageDocumentDataSlicesSlice =
  | PhotoWithTextBlockSlice
  | PopOutTextSlice
  | HeroBannerWithTextSlice;

/**
 * Content for HomePage documents
 */
interface HomepageDocumentData {
  /**
   * navigationMenu field in *HomePage*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.navigationmenu
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  navigationmenu: prismic.ContentRelationshipField<"navigationmenu">;

  /**
   * footerMenu field in *HomePage*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.footermenu
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  footermenu: prismic.ContentRelationshipField<"footermenu">;

  /**
   * Slice Zone field in *HomePage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<HomepageDocumentDataSlicesSlice> /**
   * Meta Title field in *HomePage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: homepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *HomePage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: homepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *HomePage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: homepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * HomePage document from Prismic
 *
 * - **API ID**: `homepage`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type HomepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<HomepageDocumentData>,
    "homepage",
    Lang
  >;

/**
 * Content for ImagePlaceholder documents
 */
interface ImageplaceholderDocumentData {
  /**
   * image field in *ImagePlaceholder*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: imageplaceholder.image
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;
}

/**
 * ImagePlaceholder document from Prismic
 *
 * - **API ID**: `imageplaceholder`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type ImageplaceholderDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<ImageplaceholderDocumentData>,
    "imageplaceholder",
    Lang
  >;

/**
 * Item in *LinkstreePage → linkstree*
 */
export interface LinkstreepageDocumentDataLinkstreeItem {
  /**
   * linkLabel field in *LinkstreePage → linkstree*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.linkstree[].linklabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  linklabel: prismic.KeyTextField;

  /**
   * linkSrc field in *LinkstreePage → linkstree*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.linkstree[].linksrc
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  linksrc: prismic.LinkField;
}

type LinkstreepageDocumentDataSlicesSlice = never;

/**
 * Content for LinkstreePage documents
 */
interface LinkstreepageDocumentData {
  /**
   * linkstree field in *LinkstreePage*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.linkstree[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  linkstree: prismic.GroupField<
    Simplify<LinkstreepageDocumentDataLinkstreeItem>
  >;

  /**
   * pageTitle field in *LinkstreePage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.pagetitle
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  pagetitle: prismic.KeyTextField;

  /**
   * pageDescription field in *LinkstreePage*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.pagedescription
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  pagedescription: prismic.RichTextField;

  /**
   * showLogo field in *LinkstreePage*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: true
   * - **API ID Path**: linkstreepage.showlogo
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  showlogo: prismic.BooleanField;

  /**
   * layout field in *LinkstreePage*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.layout
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  layout: prismic.ContentRelationshipField<"pagelayout">;

  /**
   * Slice Zone field in *LinkstreePage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<LinkstreepageDocumentDataSlicesSlice> /**
   * Meta Title field in *LinkstreePage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: linkstreepage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *LinkstreePage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: linkstreepage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *LinkstreePage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: linkstreepage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * LinkstreePage document from Prismic
 *
 * - **API ID**: `linkstreepage`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type LinkstreepageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<LinkstreepageDocumentData>,
    "linkstreepage",
    Lang
  >;

type MultiphotosblockDocumentDataSlicesSlice = PhotoWithTextBlockSlice;

/**
 * Content for MultiPhotosBlock documents
 */
interface MultiphotosblockDocumentData {
  /**
   * Slice Zone field in *MultiPhotosBlock*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: multiphotosblock.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<MultiphotosblockDocumentDataSlicesSlice>;
}

/**
 * MultiPhotosBlock document from Prismic
 *
 * - **API ID**: `multiphotosblock`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type MultiphotosblockDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<MultiphotosblockDocumentData>,
    "multiphotosblock",
    Lang
  >;

/**
 * Item in *NavigationMenu → navigationLink*
 */
export interface NavigationmenuDocumentDataNavigationlinkItem {
  /**
   * linkItem field in *NavigationMenu → navigationLink*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationmenu.navigationlink[].linkitem
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  linkitem: prismic.LinkField;

  /**
   * linkLabel field in *NavigationMenu → navigationLink*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationmenu.navigationlink[].linklabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  linklabel: prismic.KeyTextField;
}

/**
 * Content for NavigationMenu documents
 */
interface NavigationmenuDocumentData {
  /**
   * navigationLink field in *NavigationMenu*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationmenu.navigationlink[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  navigationlink: prismic.GroupField<
    Simplify<NavigationmenuDocumentDataNavigationlinkItem>
  >;
}

/**
 * NavigationMenu document from Prismic
 *
 * - **API ID**: `navigationmenu`
 * - **Repeatable**: `false`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type NavigationmenuDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithoutUID<
    Simplify<NavigationmenuDocumentData>,
    "navigationmenu",
    Lang
  >;

type NavigationpageDocumentDataSlicesSlice =
  | ExpandableGallerySlice
  | HeadlinePillSlice
  | IndicatorWithTextSlice
  | MapWithTextBlockSlice
  | MultiTextBlockSlice
  | AdoptionsGroupSlice
  | HeroPhotoBackgroundSlice
  | HeroBannerWithTextSlice
  | PhotoWithTextBlockSlice
  | PopOutTextSlice;

/**
 * Content for NavigationPage documents
 */
interface NavigationpageDocumentData {
  /**
   * navigationMenu field in *NavigationPage*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationpage.navigationmenu
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  navigationmenu: prismic.ContentRelationshipField<"navigationmenu">;

  /**
   * footerMenu field in *NavigationPage*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationpage.footermenu
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  footermenu: prismic.ContentRelationshipField<"footermenu">;

  /**
   * Slice Zone field in *NavigationPage*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationpage.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<NavigationpageDocumentDataSlicesSlice> /**
   * Meta Title field in *NavigationPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: navigationpage.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *NavigationPage*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: navigationpage.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *NavigationPage*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: navigationpage.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never>;
}

/**
 * NavigationPage document from Prismic
 *
 * - **API ID**: `navigationpage`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type NavigationpageDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<NavigationpageDocumentData>,
    "navigationpage",
    Lang
  >;

/**
 * Item in *PageLayout → popoverBanners*
 */
export interface PagelayoutDocumentDataPopoverbannersItem {
  /**
   * banner field in *PageLayout → popoverBanners*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.popoverbanners[].banner
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  banner: prismic.ContentRelationshipField<"popoverbanner">;
}

type PagelayoutDocumentDataSlicesSlice = never;

/**
 * Item in *PageLayout → photosGrid5*
 */
export interface PagelayoutDocumentDataPhotosgrid5Item {
  /**
   * img field in *PageLayout → photosGrid5*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.photosgrid5[].img
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  img: prismic.ImageField<never>;
}

/**
 * Content for PageLayout documents
 */
interface PagelayoutDocumentData {
  /**
   * footer field in *PageLayout*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.footer
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  footer: prismic.ContentRelationshipField<"footermenu">;

  /**
   * navigationMenu field in *PageLayout*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.navigationmenu
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  navigationmenu: prismic.ContentRelationshipField<"navigationmenu">;

  /**
   * popoverBanners field in *PageLayout*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.popoverbanners[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  popoverbanners: prismic.GroupField<
    Simplify<PagelayoutDocumentDataPopoverbannersItem>
  >;

  /**
   * Slice Zone field in *PageLayout*
   *
   * - **Field Type**: Slice Zone
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.slices[]
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#slices
   */
  slices: prismic.SliceZone<PagelayoutDocumentDataSlicesSlice> /**
   * Meta Title field in *PageLayout*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A title of the page used for social media and search engines
   * - **API ID Path**: pagelayout.meta_title
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */;
  meta_title: prismic.KeyTextField;

  /**
   * Meta Description field in *PageLayout*
   *
   * - **Field Type**: Text
   * - **Placeholder**: A brief summary of the page
   * - **API ID Path**: pagelayout.meta_description
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  meta_description: prismic.KeyTextField;

  /**
   * Meta Image field in *PageLayout*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.meta_image
   * - **Tab**: SEO & Metadata
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  meta_image: prismic.ImageField<never> /**
   * logo field in *PageLayout*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.logo
   * - **Tab**: Linkstree
   * - **Documentation**: https://prismic.io/docs/field#image
   */;
  logo: prismic.ImageField<never>;

  /**
   * photosGrid5 field in *PageLayout*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: pagelayout.photosgrid5[]
   * - **Tab**: Linkstree
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  photosgrid5: prismic.GroupField<
    Simplify<PagelayoutDocumentDataPhotosgrid5Item>
  >;
}

/**
 * PageLayout document from Prismic
 *
 * - **API ID**: `pagelayout`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PagelayoutDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PagelayoutDocumentData>,
    "pagelayout",
    Lang
  >;

/**
 * Content for PopoverBanner documents
 */
interface PopoverbannerDocumentData {
  /**
   * banner field in *PopoverBanner*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: popoverbanner.banner
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  banner: prismic.ImageField<never>;

  /**
   * ctaLabel field in *PopoverBanner*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: popoverbanner.ctalabel
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  ctalabel: prismic.KeyTextField;

  /**
   * text field in *PopoverBanner*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: popoverbanner.text
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * displayType field in *PopoverBanner*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: PopoverBanner
   * - **API ID Path**: popoverbanner.displaytype
   * - **Tab**: Main
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  displaytype: prismic.SelectField<"PopoverBanner" | "PopoverSheet", "filled">;
}

/**
 * PopoverBanner document from Prismic
 *
 * - **API ID**: `popoverbanner`
 * - **Repeatable**: `true`
 * - **Documentation**: https://prismic.io/docs/custom-types
 *
 * @typeParam Lang - Language API ID of the document.
 */
export type PopoverbannerDocument<Lang extends string = string> =
  prismic.PrismicDocumentWithUID<
    Simplify<PopoverbannerDocumentData>,
    "popoverbanner",
    Lang
  >;

export type AllDocumentTypes =
  | CatficheDocument
  | EmbedpageDocument
  | ErrorpageDocument
  | FootermenuDocument
  | HomepageDocument
  | ImageplaceholderDocument
  | LinkstreepageDocument
  | MultiphotosblockDocument
  | NavigationmenuDocument
  | NavigationpageDocument
  | PagelayoutDocument
  | PopoverbannerDocument;

/**
 * Item in *AdoptionsGroup → Default → Primary → descriptionText*
 */
export interface AdoptionsGroupSliceDefaultPrimaryDescriptionItem {
  /**
   * paragraph field in *AdoptionsGroup → Default → Primary → descriptionText*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.description[].paragraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  paragraph: prismic.RichTextField;
}

/**
 * Item in *AdoptionsGroup → Default → Primary → catsGroup*
 */
export interface AdoptionsGroupSliceDefaultPrimaryCatsgroupItem {
  /**
   * catItem field in *AdoptionsGroup → Default → Primary → catsGroup*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.catsgroup[].catitem
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  catitem: prismic.ContentRelationshipField<"catfiche">;
}

/**
 * Primary content in *AdoptionsGroup → Default → Primary*
 */
export interface AdoptionsGroupSliceDefaultPrimary {
  /**
   * title field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * descriptionText field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.description[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  description: prismic.GroupField<
    Simplify<AdoptionsGroupSliceDefaultPrimaryDescriptionItem>
  >;

  /**
   * image field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * CatAvatarPlaceholder field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Content Relationship
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.catavatarplaceholder
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  catavatarplaceholder: prismic.ContentRelationshipField<"imageplaceholder">;

  /**
   * catsGroup field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.catsgroup[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  catsgroup: prismic.GroupField<
    Simplify<AdoptionsGroupSliceDefaultPrimaryCatsgroupItem>
  >;

  /**
   * ContactInfo field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.contactinfo
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  contactinfo: prismic.RichTextField;

  /**
   * AdoptionRequirements field in *AdoptionsGroup → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: adoptions_group.default.primary.adoptionrequirements
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  adoptionrequirements: prismic.RichTextField;
}

/**
 * Default variation for AdoptionsGroup Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AdoptionsGroupSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<AdoptionsGroupSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *AdoptionsGroup*
 */
type AdoptionsGroupSliceVariation = AdoptionsGroupSliceDefault;

/**
 * AdoptionsGroup Shared Slice
 *
 * - **API ID**: `adoptions_group`
 * - **Description**: AdoptionsGroup
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type AdoptionsGroupSlice = prismic.SharedSlice<
  "adoptions_group",
  AdoptionsGroupSliceVariation
>;

/**
 * Item in *ExpandableGallery → Default → Primary → images*
 */
export interface ExpandableGallerySliceDefaultPrimaryImagesItem {
  /**
   * image field in *ExpandableGallery → Default → Primary → images*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_gallery.default.primary.images[].image
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  image: prismic.ImageField<never>;

  /**
   * hoverImage field in *ExpandableGallery → Default → Primary → images*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_gallery.default.primary.images[].hoverimage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  hoverimage: prismic.ImageField<never>;
}

/**
 * Primary content in *ExpandableGallery → Default → Primary*
 */
export interface ExpandableGallerySliceDefaultPrimary {
  /**
   * title field in *ExpandableGallery → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_gallery.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * description field in *ExpandableGallery → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_gallery.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * images field in *ExpandableGallery → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: expandable_gallery.default.primary.images[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  images: prismic.GroupField<
    Simplify<ExpandableGallerySliceDefaultPrimaryImagesItem>
  >;
}

/**
 * Default variation for ExpandableGallery Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ExpandableGallerySliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<ExpandableGallerySliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *ExpandableGallery*
 */
type ExpandableGallerySliceVariation = ExpandableGallerySliceDefault;

/**
 * ExpandableGallery Shared Slice
 *
 * - **API ID**: `expandable_gallery`
 * - **Description**: ExpandableGallery
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type ExpandableGallerySlice = prismic.SharedSlice<
  "expandable_gallery",
  ExpandableGallerySliceVariation
>;

/**
 * Primary content in *HeadlinePill → Default → Primary*
 */
export interface HeadlinePillSliceDefaultPrimary {
  /**
   * icon field in *HeadlinePill → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: headline_pill.default.primary.icon
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  icon: prismic.ImageField<never>;

  /**
   * text field in *HeadlinePill → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: headline_pill.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  text: prismic.KeyTextField;

  /**
   * variant field in *HeadlinePill → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: headline_pill.default.primary.variant
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  variant: prismic.SelectField<"dark" | "light", "filled">;
}

/**
 * Default variation for HeadlinePill Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeadlinePillSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeadlinePillSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeadlinePill*
 */
type HeadlinePillSliceVariation = HeadlinePillSliceDefault;

/**
 * HeadlinePill Shared Slice
 *
 * - **API ID**: `headline_pill`
 * - **Description**: HeadlinePill
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeadlinePillSlice = prismic.SharedSlice<
  "headline_pill",
  HeadlinePillSliceVariation
>;

/**
 * Item in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary → buttonsGroups*
 */
export interface HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimaryButtonsgroupsItem {
  /**
   * buttonLink field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary → buttonsGroups*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.buttonsgroups[].buttonitem
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  buttonitem: prismic.LinkField;

  /**
   * buttonLabel field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary → buttonsGroups*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.buttonsgroups[].buttonlabel
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  buttonlabel: prismic.KeyTextField;
}

/**
 * Primary content in *HeroBannerWithText → Default → Primary*
 */
export interface HeroBannerWithTextSliceDefaultPrimary {
  /**
   * heroImage field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.default.primary.heroimage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  heroimage: prismic.ImageField<never>;

  /**
   * heroImagePosition field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: right
   * - **API ID Path**: hero_banner_with_text.default.primary.heroimageposition
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  heroimageposition: prismic.SelectField<"right" | "left", "filled">;

  /**
   * subText field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.default.primary.subtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtext: prismic.RichTextField;

  /**
   * headingText field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.default.primary.headingtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  headingtext: prismic.RichTextField;

  /**
   * descriptionParagraph field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.default.primary.descriptionparagraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  descriptionparagraph: prismic.RichTextField;

  /**
   * variant field in *HeroBannerWithText → Default → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: hero_banner_with_text.default.primary.variant
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  variant: prismic.SelectField<"dark" | "light", "filled">;
}

/**
 * Default variation for HeroBannerWithText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerWithTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroBannerWithTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
 */
export interface HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimary {
  /**
   * heroImage field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.heroimage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  heroimage: prismic.ImageField<never>;

  /**
   * heroImagePosition field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: right
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.heroimageposition
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  heroimageposition: prismic.SelectField<"right" | "left", "filled">;

  /**
   * subText field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.subtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtext: prismic.RichTextField;

  /**
   * headingText field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.headingtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  headingtext: prismic.RichTextField;

  /**
   * descriptionParagraph field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.descriptionparagraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  descriptionparagraph: prismic.RichTextField;

  /**
   * variant field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.variant
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  variant: prismic.SelectField<"dark" | "light", "filled">;

  /**
   * buttonsGroups field in *HeroBannerWithText →  HeroBannerWithText-Buttons → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextButtons.primary.buttonsgroups[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  buttonsgroups: prismic.GroupField<
    Simplify<HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimaryButtonsgroupsItem>
  >;
}

/**
 *  HeroBannerWithText-Buttons variation for HeroBannerWithText Slice
 *
 * - **API ID**: `heroBannerWithTextButtons`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerWithTextSliceHeroBannerWithTextButtons =
  prismic.SharedSliceVariation<
    "heroBannerWithTextButtons",
    Simplify<HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimary>,
    never
  >;

/**
 * Primary content in *HeroBannerWithText → HeroBannerWithText-Emphasis → Primary*
 */
export interface HeroBannerWithTextSliceHeroBannerWithTextEmphasisPrimary {
  /**
   * subText field in *HeroBannerWithText → HeroBannerWithText-Emphasis → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextEmphasis.primary.subtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtext: prismic.RichTextField;

  /**
   * headingText field in *HeroBannerWithText → HeroBannerWithText-Emphasis → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextEmphasis.primary.headingtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  headingtext: prismic.RichTextField;

  /**
   * descriptionParagraph field in *HeroBannerWithText → HeroBannerWithText-Emphasis → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextEmphasis.primary.descriptionparagraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  descriptionparagraph: prismic.RichTextField;

  /**
   * variant field in *HeroBannerWithText → HeroBannerWithText-Emphasis → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: hero_banner_with_text.heroBannerWithTextEmphasis.primary.variant
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  variant: prismic.SelectField<"dark" | "light", "filled">;
}

/**
 * HeroBannerWithText-Emphasis variation for HeroBannerWithText Slice
 *
 * - **API ID**: `heroBannerWithTextEmphasis`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerWithTextSliceHeroBannerWithTextEmphasis =
  prismic.SharedSliceVariation<
    "heroBannerWithTextEmphasis",
    Simplify<HeroBannerWithTextSliceHeroBannerWithTextEmphasisPrimary>,
    never
  >;

/**
 * Primary content in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
 */
export interface HeroBannerWithTextSliceHeroBanneWithTextHeadingPrimary {
  /**
   * heroImage field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.heroimage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  heroimage: prismic.ImageField<never>;

  /**
   * heroImagePosition field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: right
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.heroimageposition
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  heroimageposition: prismic.SelectField<"right" | "left", "filled">;

  /**
   * subText field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.subtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  subtext: prismic.RichTextField;

  /**
   * headingText field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.headingtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  headingtext: prismic.RichTextField;

  /**
   * descriptionParagraph field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.descriptionparagraph
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  descriptionparagraph: prismic.RichTextField;

  /**
   * variant field in *HeroBannerWithText → HeroBanneWithText-Heading → Primary*
   *
   * - **Field Type**: Select
   * - **Placeholder**: *None*
   * - **Default Value**: dark
   * - **API ID Path**: hero_banner_with_text.heroBanneWithTextHeading.primary.variant
   * - **Documentation**: https://prismic.io/docs/field#select
   */
  variant: prismic.SelectField<"dark" | "light", "filled">;
}

/**
 * HeroBanneWithText-Heading variation for HeroBannerWithText Slice
 *
 * - **API ID**: `heroBanneWithTextHeading`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerWithTextSliceHeroBanneWithTextHeading =
  prismic.SharedSliceVariation<
    "heroBanneWithTextHeading",
    Simplify<HeroBannerWithTextSliceHeroBanneWithTextHeadingPrimary>,
    never
  >;

/**
 * Slice variation for *HeroBannerWithText*
 */
type HeroBannerWithTextSliceVariation =
  | HeroBannerWithTextSliceDefault
  | HeroBannerWithTextSliceHeroBannerWithTextButtons
  | HeroBannerWithTextSliceHeroBannerWithTextEmphasis
  | HeroBannerWithTextSliceHeroBanneWithTextHeading;

/**
 * HeroBannerWithText Shared Slice
 *
 * - **API ID**: `hero_banner_with_text`
 * - **Description**: HeroBannerWithText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroBannerWithTextSlice = prismic.SharedSlice<
  "hero_banner_with_text",
  HeroBannerWithTextSliceVariation
>;

/**
 * Primary content in *HeroPhotoBackground → Default → Primary*
 */
export interface HeroPhotoBackgroundSliceDefaultPrimary {
  /**
   * backgroundImage field in *HeroPhotoBackground → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_photo_background.default.primary.backgroundimage
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  backgroundimage: prismic.ImageField<never>;

  /**
   * text field in *HeroPhotoBackground → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: hero_photo_background.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for HeroPhotoBackground Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroPhotoBackgroundSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<HeroPhotoBackgroundSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *HeroPhotoBackground*
 */
type HeroPhotoBackgroundSliceVariation = HeroPhotoBackgroundSliceDefault;

/**
 * HeroPhotoBackground Shared Slice
 *
 * - **API ID**: `hero_photo_background`
 * - **Description**: HeroPhotoBackground
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type HeroPhotoBackgroundSlice = prismic.SharedSlice<
  "hero_photo_background",
  HeroPhotoBackgroundSliceVariation
>;

/**
 * Primary content in *IndicatorWithText → Default → Primary*
 */
export interface IndicatorWithTextSliceDefaultPrimary {
  /**
   * indicator field in *IndicatorWithText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: indicator_with_text.default.primary.indicator
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  indicator: prismic.RichTextField;

  /**
   * description field in *IndicatorWithText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: indicator_with_text.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for IndicatorWithText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type IndicatorWithTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<IndicatorWithTextSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *IndicatorWithText*
 */
type IndicatorWithTextSliceVariation = IndicatorWithTextSliceDefault;

/**
 * IndicatorWithText Shared Slice
 *
 * - **API ID**: `indicator_with_text`
 * - **Description**: IndicatorWithText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type IndicatorWithTextSlice = prismic.SharedSlice<
  "indicator_with_text",
  IndicatorWithTextSliceVariation
>;

/**
 * Primary content in *MapWithTextBlock → Default → Primary*
 */
export interface MapWithTextBlockSliceDefaultPrimary {
  /**
   * title field in *MapWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: map_with_text_block.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * description field in *MapWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: map_with_text_block.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;

  /**
   * geoPoint field in *MapWithTextBlock → Default → Primary*
   *
   * - **Field Type**: GeoPoint
   * - **Placeholder**: *None*
   * - **API ID Path**: map_with_text_block.default.primary.geopoint
   * - **Documentation**: https://prismic.io/docs/field#geopoint
   */
  geopoint: prismic.GeoPointField;

  /**
   * infoText field in *MapWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: map_with_text_block.default.primary.infotext
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  infotext: prismic.KeyTextField;

  /**
   * infoLink field in *MapWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Link
   * - **Placeholder**: *None*
   * - **API ID Path**: map_with_text_block.default.primary.infolink
   * - **Documentation**: https://prismic.io/docs/field#link-content-relationship
   */
  infolink: prismic.LinkField;
}

/**
 * Default variation for MapWithTextBlock Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MapWithTextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MapWithTextBlockSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *MapWithTextBlock*
 */
type MapWithTextBlockSliceVariation = MapWithTextBlockSliceDefault;

/**
 * MapWithTextBlock Shared Slice
 *
 * - **API ID**: `map_with_text_block`
 * - **Description**: MapWithTextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MapWithTextBlockSlice = prismic.SharedSlice<
  "map_with_text_block",
  MapWithTextBlockSliceVariation
>;

/**
 * Item in *MultiTextBlock → Default → Primary → textBlocksGroup*
 */
export interface MultiTextBlockSliceDefaultPrimaryTextblocksgroupItem {
  /**
   * textBlockTitle field in *MultiTextBlock → Default → Primary → textBlocksGroup*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: multi_text_block.default.primary.textblocksgroup[].textblocktitle
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  textblocktitle: prismic.KeyTextField;

  /**
   * textBlockContent field in *MultiTextBlock → Default → Primary → textBlocksGroup*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: multi_text_block.default.primary.textblocksgroup[].textblockcontent
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  textblockcontent: prismic.RichTextField;
}

/**
 * Primary content in *MultiTextBlock → Default → Primary*
 */
export interface MultiTextBlockSliceDefaultPrimary {
  /**
   * title field in *MultiTextBlock → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: multi_text_block.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  title: prismic.RichTextField;

  /**
   * textBlocksGroup field in *MultiTextBlock → Default → Primary*
   *
   * - **Field Type**: Group
   * - **Placeholder**: *None*
   * - **API ID Path**: multi_text_block.default.primary.textblocksgroup[]
   * - **Documentation**: https://prismic.io/docs/field#group
   */
  textblocksgroup: prismic.GroupField<
    Simplify<MultiTextBlockSliceDefaultPrimaryTextblocksgroupItem>
  >;
}

/**
 * Default variation for MultiTextBlock Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MultiTextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<MultiTextBlockSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *MultiTextBlock*
 */
type MultiTextBlockSliceVariation = MultiTextBlockSliceDefault;

/**
 * MultiTextBlock Shared Slice
 *
 * - **API ID**: `multi_text_block`
 * - **Description**: MultiTextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type MultiTextBlockSlice = prismic.SharedSlice<
  "multi_text_block",
  MultiTextBlockSliceVariation
>;

/**
 * Primary content in *PhotoWithTextBlock → Default → Primary*
 */
export interface PhotoWithTextBlockSliceDefaultPrimary {
  /**
   * photo field in *PhotoWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Image
   * - **Placeholder**: *None*
   * - **API ID Path**: photo_with_text_block.default.primary.photo
   * - **Documentation**: https://prismic.io/docs/field#image
   */
  photo: prismic.ImageField<never>;

  /**
   * title field in *PhotoWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Text
   * - **Placeholder**: *None*
   * - **API ID Path**: photo_with_text_block.default.primary.title
   * - **Documentation**: https://prismic.io/docs/field#key-text
   */
  title: prismic.KeyTextField;

  /**
   * description field in *PhotoWithTextBlock → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: photo_with_text_block.default.primary.description
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  description: prismic.RichTextField;
}

/**
 * Default variation for PhotoWithTextBlock Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PhotoWithTextBlockSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<PhotoWithTextBlockSliceDefaultPrimary>,
  never
>;

/**
 * Slice variation for *PhotoWithTextBlock*
 */
type PhotoWithTextBlockSliceVariation = PhotoWithTextBlockSliceDefault;

/**
 * PhotoWithTextBlock Shared Slice
 *
 * - **API ID**: `photo_with_text_block`
 * - **Description**: PhotoWithTextBlock
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PhotoWithTextBlockSlice = prismic.SharedSlice<
  "photo_with_text_block",
  PhotoWithTextBlockSliceVariation
>;

/**
 * Primary content in *PopOutText → Default → Primary*
 */
export interface PopOutTextSliceDefaultPrimary {
  /**
   * text field in *PopOutText → Default → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pop_out_text.default.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;
}

/**
 * Default variation for PopOutText Slice
 *
 * - **API ID**: `default`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PopOutTextSliceDefault = prismic.SharedSliceVariation<
  "default",
  Simplify<PopOutTextSliceDefaultPrimary>,
  never
>;

/**
 * Primary content in *PopOutText → PopOutText-WithHeading → Primary*
 */
export interface PopOutTextSlicePopOutTextWithHeadingPrimary {
  /**
   * headingText field in *PopOutText → PopOutText-WithHeading → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pop_out_text.popOutTextWithHeading.primary.headingtext
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  headingtext: prismic.RichTextField;

  /**
   * text field in *PopOutText → PopOutText-WithHeading → Primary*
   *
   * - **Field Type**: Rich Text
   * - **Placeholder**: *None*
   * - **API ID Path**: pop_out_text.popOutTextWithHeading.primary.text
   * - **Documentation**: https://prismic.io/docs/field#rich-text-title
   */
  text: prismic.RichTextField;

  /**
   * fitText field in *PopOutText → PopOutText-WithHeading → Primary*
   *
   * - **Field Type**: Boolean
   * - **Placeholder**: *None*
   * - **Default Value**: false
   * - **API ID Path**: pop_out_text.popOutTextWithHeading.primary.fittext
   * - **Documentation**: https://prismic.io/docs/field#boolean
   */
  fittext: prismic.BooleanField;
}

/**
 * PopOutText-WithHeading variation for PopOutText Slice
 *
 * - **API ID**: `popOutTextWithHeading`
 * - **Description**: Default
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PopOutTextSlicePopOutTextWithHeading = prismic.SharedSliceVariation<
  "popOutTextWithHeading",
  Simplify<PopOutTextSlicePopOutTextWithHeadingPrimary>,
  never
>;

/**
 * Slice variation for *PopOutText*
 */
type PopOutTextSliceVariation =
  | PopOutTextSliceDefault
  | PopOutTextSlicePopOutTextWithHeading;

/**
 * PopOutText Shared Slice
 *
 * - **API ID**: `pop_out_text`
 * - **Description**: PopOutText
 * - **Documentation**: https://prismic.io/docs/slice
 */
export type PopOutTextSlice = prismic.SharedSlice<
  "pop_out_text",
  PopOutTextSliceVariation
>;

declare module "@prismicio/client" {
  interface CreateClient {
    (
      repositoryNameOrEndpoint: string,
      options?: prismic.ClientConfig,
    ): prismic.Client<AllDocumentTypes>;
  }

  namespace Content {
    export type {
      CatficheDocument,
      CatficheDocumentData,
      EmbedpageDocument,
      EmbedpageDocumentData,
      EmbedpageDocumentDataSlicesSlice,
      ErrorpageDocument,
      ErrorpageDocumentData,
      ErrorpageDocumentDataErrorslistItem,
      ErrorpageDocumentDataQuickaccesslinksItem,
      ErrorpageDocumentDataSlicesSlice,
      FootermenuDocument,
      FootermenuDocumentData,
      FootermenuDocumentDataLinksgroupItem,
      FootermenuDocumentDataSocialmediasItem,
      HomepageDocument,
      HomepageDocumentData,
      HomepageDocumentDataSlicesSlice,
      ImageplaceholderDocument,
      ImageplaceholderDocumentData,
      LinkstreepageDocument,
      LinkstreepageDocumentData,
      LinkstreepageDocumentDataLinkstreeItem,
      LinkstreepageDocumentDataSlicesSlice,
      MultiphotosblockDocument,
      MultiphotosblockDocumentData,
      MultiphotosblockDocumentDataSlicesSlice,
      NavigationmenuDocument,
      NavigationmenuDocumentData,
      NavigationmenuDocumentDataNavigationlinkItem,
      NavigationpageDocument,
      NavigationpageDocumentData,
      NavigationpageDocumentDataSlicesSlice,
      PagelayoutDocument,
      PagelayoutDocumentData,
      PagelayoutDocumentDataPopoverbannersItem,
      PagelayoutDocumentDataSlicesSlice,
      PagelayoutDocumentDataPhotosgrid5Item,
      PopoverbannerDocument,
      PopoverbannerDocumentData,
      AllDocumentTypes,
      AdoptionsGroupSlice,
      AdoptionsGroupSliceDefaultPrimaryDescriptionItem,
      AdoptionsGroupSliceDefaultPrimaryCatsgroupItem,
      AdoptionsGroupSliceDefaultPrimary,
      AdoptionsGroupSliceVariation,
      AdoptionsGroupSliceDefault,
      ExpandableGallerySlice,
      ExpandableGallerySliceDefaultPrimaryImagesItem,
      ExpandableGallerySliceDefaultPrimary,
      ExpandableGallerySliceVariation,
      ExpandableGallerySliceDefault,
      HeadlinePillSlice,
      HeadlinePillSliceDefaultPrimary,
      HeadlinePillSliceVariation,
      HeadlinePillSliceDefault,
      HeroBannerWithTextSlice,
      HeroBannerWithTextSliceDefaultPrimary,
      HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimaryButtonsgroupsItem,
      HeroBannerWithTextSliceHeroBannerWithTextButtonsPrimary,
      HeroBannerWithTextSliceHeroBannerWithTextEmphasisPrimary,
      HeroBannerWithTextSliceHeroBanneWithTextHeadingPrimary,
      HeroBannerWithTextSliceVariation,
      HeroBannerWithTextSliceDefault,
      HeroBannerWithTextSliceHeroBannerWithTextButtons,
      HeroBannerWithTextSliceHeroBannerWithTextEmphasis,
      HeroBannerWithTextSliceHeroBanneWithTextHeading,
      HeroPhotoBackgroundSlice,
      HeroPhotoBackgroundSliceDefaultPrimary,
      HeroPhotoBackgroundSliceVariation,
      HeroPhotoBackgroundSliceDefault,
      IndicatorWithTextSlice,
      IndicatorWithTextSliceDefaultPrimary,
      IndicatorWithTextSliceVariation,
      IndicatorWithTextSliceDefault,
      MapWithTextBlockSlice,
      MapWithTextBlockSliceDefaultPrimary,
      MapWithTextBlockSliceVariation,
      MapWithTextBlockSliceDefault,
      MultiTextBlockSlice,
      MultiTextBlockSliceDefaultPrimaryTextblocksgroupItem,
      MultiTextBlockSliceDefaultPrimary,
      MultiTextBlockSliceVariation,
      MultiTextBlockSliceDefault,
      PhotoWithTextBlockSlice,
      PhotoWithTextBlockSliceDefaultPrimary,
      PhotoWithTextBlockSliceVariation,
      PhotoWithTextBlockSliceDefault,
      PopOutTextSlice,
      PopOutTextSliceDefaultPrimary,
      PopOutTextSlicePopOutTextWithHeadingPrimary,
      PopOutTextSliceVariation,
      PopOutTextSliceDefault,
      PopOutTextSlicePopOutTextWithHeading,
    };
  }
}
